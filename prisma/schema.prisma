// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User{
  id String @unique @default(uuid())
  email String @unique
  hashedPassword String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
  profile Profile?
  posts Post[]
  // profileId Int? @unique
  // profile Profile? @relation(fields: [profileId], references: [id])
}

model Profile{
  id Int @id @default(autoincrement())
  bio String
  userId Int @unique
  user User @relation(fields: [userId], references: [id])
  // user User?
}

model Post{
  id Int @id @default(autoincrement())
  title String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean @default(false)
  authorId Int
  author User @relation(fields: [authorId], references: [id])
  categories Category[]
}

// model User{
//   firstName String
//   lastName String
//   profile Profile?
//   @@id([firstName,lastName])
// }

// model Profile{
//   id Int @id
//   userFirstName String
//   userLastName String
//   user User @relation(fields: [userFirstName,userLastName], references: [firstName, lastName])

//   @@unique([userFirstName,userLastName])
// }

model Category{
  id Int @id @default(autoincrement())
  name String 
  posts Post[]
}